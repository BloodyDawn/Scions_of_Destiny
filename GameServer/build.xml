<?xml version="1.0" encoding="UTF-8"?>
<project name="L2Jserver" default="dist" basedir=".">

    <property name="src" location="java"/>
    <property name="lib" location="lib"/>
    <property name="build" location="build"/>
    <property name="build.classes" location="${build}/classes"/>
    <property name="build.dist" location="${build}/dist"/>
    <property name="build.dist.login" location="${build.dist}/login"/>
    <property name="build.dist.game" location="${build.dist}/gameserver"/>
    <property name="build.dist.libs" location="${build.dist}/libs"/>
    <path id="classpath">
        <fileset dir="${lib}">
            <include name="*.jar" />
        </fileset>
    </path>

    <target name="verifyRequirements" description="Check Requirements.">
      <fail message="Ant 1.9.1 is required. Your Ant version is ${ant.version} and if you are using Eclipse it's probably outdated.">
        <condition>
          <not>
            <antversion atleast="1.9.1"/>
          </not>
        </condition>
      </fail>
      <available classname="java.util.stream.Stream" property="JDK8.present"/>
      <fail unless="JDK8.present" message="Java 1.8 is required. Your version is Java ${ant.java.version} and probably JDK is not installed."/>
    </target>

    <target name="init"
    	depends="clean, verifyRequirements"
        description="Create the output directories.">

        <mkdir dir="${build}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.dist}" />
    	<mkdir dir="${build.dist.login}" />
		<mkdir dir="${build.dist.game}" />
    </target>
    
    
    <target name="compile"
            depends="version"
            description="Compile the source.">

        <javac srcdir="${src}"
            classpathref="classpath"
            destdir="${build.classes}"
            compiler="javac1.8"
            optimize="on"
            debug="on"
            includeantruntime="false"
            source="1.8"
            target="1.8"/>
    </target>

    <target name="jar"
            depends="compile"
            description="Create the jar file">

        <jar destfile="${build}/l2jserver.jar">
            <fileset dir="${build.classes}"/>
        </jar>
        
    	<copy todir="${build.dist.login}">
            <fileset dir="${build}">
                <include name="l2jserver.jar"/>
			</fileset>
        </copy>
    	<copy todir="${build.dist.game}">
            <fileset dir="${build}">
                <include name="l2jserver.jar"/>
			</fileset>
        </copy>
        
    </target>

    <target name="dist" depends="jar">
    	
    	<copy todir="${build.dist.login}">
            <fileset dir="${src}">
                <include name="log.cfg"/>
                <include name="banned_ip.cfg"/>
                <include name="console.cfg"/>
			</fileset>
        </copy>
    	
    	<copy todir="${build.dist.game}">
            <fileset dir="${src}">
                <include name="log.cfg"/>
                <include name="console.cfg"/>
			</fileset>
        </copy>
    	
    	<copy todir="${build.dist.libs}">
            <fileset dir="${src}/../lib">
                    <include name="*.jar"/>
            </fileset>
        </copy>


        <copy todir="${build.dist.login}">
            <fileset dir="dist">
                <include name="startAccountManager.*"/>
                <include name="startSQLAccountManager.*"/>
                <include name="LoginServer_loop.sh"/>
                <include name="startLoginServer.*"/>
            	<include name="RegisterGameServer.*"/>
            </fileset>
        </copy>
    	<copy todir="${build.dist.game}">
            <fileset dir="dist">
                <include name="GameServer_loop.sh"/>
                <include name="startGameServer.*"/>
            </fileset>
        </copy>
    	
		<fixcrlf 	srcdir="${build.dist.game}"
					eol="lf"
					eof="remove"
					includes="**/*.sh">
		</fixcrlf>
    	<fixcrlf 	srcdir="${build.dist.login}"
					eol="lf"
					eof="remove"
					includes="**/*.sh">
		</fixcrlf>
		
		<fixcrlf 	srcdir="${build.dist.game}"
					eol="crlf"
					eof="remove"
					includes="**/*.bat">
		</fixcrlf>
    	<fixcrlf 	srcdir="${build.dist.login}"
					eol="crlf"
					eof="remove"
					includes="**/*.bat">
		</fixcrlf>

        
        <mkdir dir="${build.dist.game}/log"/>
    	<mkdir dir="${build.dist.login}/log"/>

        <mkdir dir="${build.dist.game}/config" />
    	<mkdir dir="${build.dist.login}/config" />
    	<copy todir="${build.dist.game}/config">
			<fileset dir="java/config">
				<include name="*.properties"/>
				<exclude name="loginserver.properties" />
			</fileset>
        </copy>
    	<copy todir="${build.dist.login}/config">
			<fileset dir="java/config">
				<include name="loginserver.properties"/>
				<include name="telnet.properties"/>
			</fileset>
	</copy>

        <mkdir dir="${build.dist.game}/data" />
        <copy todir="${build.dist.game}/data">
            <fileset dir="data">
                <include name="*.csv"/>

            	<include name="*.txt"/>
			</fileset>
        </copy>


        <copy todir="${build.dist.login}">
            <fileset dir="data">
                <include name="servername.xml"/>
                        </fileset>
        </copy>

        <mkdir dir="${build.dist.game}/data/geodata" />
        <copy todir="${build.dist.game}/data/geodata">
            <fileset dir="data/geodata">
                <include name="*.txt"/>
                <include name="*.l2j"/>
            </fileset>
        </copy>

        <mkdir dir="${build.dist.game}/data/pathnode" />
        <copy todir="${build.dist.game}/data/pathnode">
            <fileset dir="data/pathnode">
                <include name="*.txt"/>
                <include name="*.pn"/>
            </fileset>
        </copy>

        <zip destfile="${build}/GameServer.zip"
             basedir="${build.dist}" />
    </target>
    <target name="version" depends="init" description="Create l2j-version.properties file">
    	<tstamp>
    	  <format property="build.tstamp"
    	              pattern="yyyyMMdd_HHmm"/>
    	</tstamp>
   	
      <concat destfile="${build.dist.game}/config/l2j-version.properties">
        version=${l2j.revision}
        builddate=${build.tstamp}
      </concat>
    </target>

    <target name="clean"
            description="Remove the output directories">

        <delete dir="${build}"/>
    </target>
</project>